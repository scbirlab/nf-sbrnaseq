manifest {

    author          = "Eachan O. Johnson"
    homePage        = "https://github.com/scbirlab/nf-sbrnaseq"
    description     = "Process demultiplexed Illumina paired-end FASTQ files from multiple bacterial samples into a gene x cell count table"
    defaultBranch   = "v0.0.9"
    nextflowVersion = '!>=22.10.1'
    version         = "0.0.9"
    doi             = ''

}

params {
    
    help = false
    
    // *** Pipeline Input parameters ***

    sample_sheet = null
    fastq_dir = null
    inputs = "inputs"
    outputs = "outputs"
    from_sra = false

    // *** Pipeline processing parameters ***

    // - Adapter trimming
    trim_qual = 5
    min_length = "9:38" 

    allow_cell_errors = true
    mapper = "bowtie2"

    // - Feature counting
    // * Strandedness: 1 for forward, 2 for reverse
    strand = 1
    // which annotation types to use to count reads
    // This is one or more (comma-separated) categories 
    // from column 3 of the GFF   
    ann_type = 'gene'
    // What to use to label the features
    // This is one or more (comma-separated) fields
    // from column 9 of the GFF
    label = 'locus_tag'

    umicollapse_repo = "https://github.com/siddharthab/UMICollapse.git"
    umicollapse_image = 'https://depot.galaxyproject.org/singularity/umicollapse:1.1.0--hdfd78af_0'
    umitools_image = 'docker://getwilds/umitools:1.1.6'
}

conda {
  //enabled = true
  enabled = false
  createTimeout = '4 h'
}
process.conda = "${projectDir}/environment.yml"

singularity {
  enabled = true
  autoMounts = true
}
docker {
  enabled = false
}

profiles {

  standard {

    notification {
      enabled = true
      to = "$USER@crick.ac.uk"
    }

    dag {
      enabled = true
      overwrite = true
    }

    process {
      
      executor = 'slurm'

      withLabel: big_cpu {
        time = '3h'
        cpus = 16
        memory = 16.GB
      }

      withLabel: big_time {
        time = '4d'
        cpus = 1
        memory = 16.GB
      }

      withLabel: some_mem {
        cpus = 1
        memory = 16.GB
      }

      withLabel: med_mem {
        cpus = 1
        memory = 64.GB
      }

      withLabel: big_mem {
        cpus = 16
        memory = 128.GB
      }

      withLabel: gpu_single {
        queue = 'gpu'
        time = '7d'
        module = 'cuDNN/8.9.2.26-CUDA-12.1.1'
        cpus = 2
        clusterOptions = '--gres=gpu:1'
        memory = 128.GB
      }

      withLabel: gpu {
        queue = 'gpu'
        time = '4h'
        module = 'cuDNN/8.9.2.26-CUDA-12.1.1'
        cpus = 2
        clusterOptions = '--gres=gpu:2'
        memory = 128.GB
      }

    }

  }

  local {

    process {
      executor = 'local'
      cpus = 2
      memory = 32.GB
    }
  }

  gh {

    process {
      executor = 'local'
      cpus = 1
      memory = 4.GB
    }
    
  }

}